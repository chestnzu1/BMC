library(WGCNA)
library(cluster)
library(flashClust)
options(stringsAsFactors = FALSE)
brac=read.csv("E:/PHD/Msc_Internship/BMC_modification/WGCNA_GO1_log.csv")#load log transformed patient data(FPKM)
datBRAC=as.data.frame(t(brac[,-c(1,2)]))
names(datBRAC)=brac$Gene
rownames(datBRAC)=names(brac[,-c(1,2)])
#we only have binary score showing if it is hallmark gene or not 
gsg=goodSamplesGenes(datBRAC,verbose=3)
gsg$allOK
#next step clustering samples
sampleTree=hclust(dist(datBRAC),method='average')
sizeGrWindow(12,9)
par(cex = 0.6);
par(mar = c(0,4,2,0))
plot(sampleTree, main = "Sample clustering to detect outliers", sub="", xlab="", cex.lab = 1.5,
     cex.axis = 1.5, cex.main = 2)
abline(h=15,col='red')
clust=cutreeStatic(sampleTree,cutHeight=15,minSize = 10)#for GO1 to GO3, minsize should be 10
table=(clust)
keepSamples=(clust==1)
datExpr = datBRAC[keepSamples, ]
nGenes = ncol(datExpr)
nSamples = nrow(datExpr)
powers=c(c(1:10),seq(from=10,to=20,by=2))
sft=pickSoftThreshold(datExpr,powerVector = powers,verbose=5)
sizeGrWindow(9, 5)
par(mfrow = c(1,2));
cex1 = 0.9;
plot(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
     xlab="Soft Threshold (power)",ylab="Scale Free Topology Model Fit,signed R^2",type="n",
     main = paste("Scale independence"));
abline(h=0.80,col="red")
text(sft$fitIndices[,1], -sign(sft$fitIndices[,3])*sft$fitIndices[,2],
     labels=powers,cex=cex1,col="red");
plot(sft$fitIndices[,1], sft$fitIndices[,5],
     xlab="Soft Threshold (power)",ylab="Mean Connectivity", type="n",
     main = paste("Mean connectivity"))
text(sft$fitIndices[,1], sft$fitIndices[,5], labels=powers, cex=cex1,col="red")
expectpower=sft$powerEstimate
net = blockwiseModules(datExpr, power =expectpower,#GO1,power=10,#GO2,power=6,#GO3,power=7
                       TOMType = "unsigned", minModuleSize = 10,#here we choose 10, as we only have hundreds sample.
                       reassignThreshold = 0, mergeCutHeight = 0.25,
                       numericLabels = TRUE, pamRespectsDendro = FALSE,
                       saveTOMs = TRUE,
                       saveTOMFileBase = "BRAC",
                       verbose = 3)
sizeGrWindow(12, 9)
# Convert labels to colors for  
mergedColors = labels2colors(net$colors)
# Plot the dendrogram and the module colors underneath
plotDendroAndColors(net$dendrograms[[1]], mergedColors[net$blockGenes[[1]]],
                    "Module colors",
                    dendroLabels = FALSE, hang = 0.03,
                    addGuide = TRUE, guideHang = 0.05)
MEs=net$MEs
moduleColors=labels2colors(net$colors)
hubs=chooseTopHubInEachModule(datExpr,colorh = Modulecolors,type='unsigned')
geneTree = net$dendrograms[[1]]
TOM=TOMsimilarityFromExpr(datExpr,power=expectpower)
modules=c("turquoise","blue","brown","yellow","green","red")
probes=names(datExpr)
inModule=is.finite(match(moduleColors,modules))
modProbes=probes[inModule]
modTOM=TOM[inModule,inModule]
dimnames(modTOM)=list(modProbes,modProbes)
cyt = exportNetworkToCytoscape(modTOM,
                               edgeFile = paste("CytoscapeInput-edges-", paste(modules, collapse="-"), ".txt", sep=""),
                               nodeFile = paste("CytoscapeInput-nodes-", paste(modules, collapse="-"), ".txt", sep=""),
                               weighted = TRUE,
                               threshold = 0.02,
                               nodeNames = modProbes,
                               nodeAttr = moduleColors[inModule])
